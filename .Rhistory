head(data3)
data3 <- which[data2$weekdays1 == "weekdays", ]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.factor(intervaldata3),intervalmeans3)
colnames(intervalmeans3) <- (c("interval", "meansteps"))
data3 <- which(data2$weekdays1 == "weekdays")
head(data3)
head(data2$weekdays1)
tapply(data3,interval,mean)
tapply(data3$steps,data3$interval,mean)
tapply(data3$steps,$interval,mean)
tapply(data3$steps,interval,mean)
tapply(data$steps,data$interval,mean)
head(data3)
data3 <- data2[data2$weekdays1 == "weekdays",]
data3 <- data2[data2$weekdays1 == "weekdays",]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.factor(intervaldata3),intervalmeans3)
colnames(intervalmeans3) <- (c("interval", "meansteps"))
head(data3)
data3
head(data2)
data3 <- data2[which(data2$weekdays1 == "weekdays"),]
head(data3)
which(data2$weekdays1 == "weekdays")
data3 <- data2[data2$weekdays1 == "weekday",]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.factor(intervaldata3),intervalmeans3)
colnames(intervalmeans3) <- (c("interval", "meansteps"))
head(data3)
intervalmeans3
data4 <- data2[data2$weekdays1 == "weekend",]
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.factor(intervaldata4),intervalmeans4)
colnames(intervalmeans4) <- (c("interval", "meansteps"))
data4
intervalmeans4
data4 <- data2[data2$weekdays1 == "weekend",]
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.factor(intervaldata4),intervalmeans4)
colnames(intervalmeans4) <- (c("interval", "meansteps"))
data4
mean(data4$steps)
mean(data3$steps)
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.factor(intervaldata4),intervalmeans4)
colnames(intervalmeans4) <- (c("interval", "meansteps"))
intervalmeans4
intervalmeans3
head(intervalmeans4)
head(intervalmeans4,200)
dim(intervalmeans)
dim(intervalmeans2)
dim(intervalmeans3)
dim(intervalmeans4)
c1 <- c(rep("weekend", 288))
c1
data3 <- data2[data2$weekdays1 == "weekday",]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.factor(intervaldata3),intervalmeans3,c(rep("weekend", 288)))
colnames(intervalmeans3) <- (c("interval", "meansteps", "weekday1"))
data4 <- data2[data2$weekdays1 == "weekend",]
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.factor(intervaldata4),intervalmeans4, c(rep("weekend", 288)))
colnames(intervalmeans4) <- (c("interval", "meansteps", "weekday1"))
merge(data3, data4)
data3
data3 <- data2[data2$weekdays1 == "weekday",]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.factor(intervaldata3),intervalmeans3,c(rep("weekend", 288)))
colnames(intervalmeans3) <- (c("interval", "meansteps", "weekday1"))
data4 <- data2[data2$weekdays1 == "weekend",]
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.factor(intervaldata4),intervalmeans4, c(rep("weekend", 288)))
colnames(intervalmeans4) <- (c("interval", "meansteps", "weekday1"))
data5 <- merge(intervalmeans3,intervalmeans4)
dim(data5)
data5
dim(intervalmeans3)
dim(intervalmeans4)
data5 <- rbind(intervalmeans3,intervalmeans4)
dim(data5)
xyplot(steps ~  interval | weekdays1, data = data5, layout = c(1, 2), type = "l")
xyplot(meansteps ~  interval | weekdays1, data = data5, layout = c(1, 2), type = "l")
xyplot(meansteps ~  interval | weekday1, data = data5, layout = c(1, 2), type = "l")
data3 <- data2[data2$weekdays1 == "weekday",]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.factor(intervaldata3),intervalmeans3,c(rep("weekday", 288)))
colnames(intervalmeans3) <- (c("interval", "meansteps", "weekdays1"))
data4 <- data2[data2$weekdays1 == "weekend",]
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.factor(intervaldata4),intervalmeans4, c(rep("weekend", 288)))
colnames(intervalmeans4) <- (c("interval", "meansteps", "weekdays1"))
data5 <- rbind(intervalmeans3,intervalmeans4)
library(lattice)
xyplot(meansteps ~  interval | weekdays1, data = data5, layout = c(1, 2), type = "l")
xyplot(meansteps ~  interval | weekdays1, data = data5, layout = c(1, 2))
data3 <- data2[data2$weekdays1 == "weekday",]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.factor(intervaldata3),intervalmeans3,c(rep("weekday", 288)))
colnames(intervalmeans3) <- (c("interval", "meansteps", "weekdays1"))
data4 <- data2[data2$weekdays1 == "weekend",]
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.factor(intervaldata4),intervalmeans4, c(rep("weekend", 288)))
colnames(intervalmeans4) <- (c("interval", "meansteps", "weekdays1"))
data5 <- rbind(intervalmeans3,intervalmeans4)
library(lattice)
xyplot(meansteps ~  interval | weekdays1, data = data5, layout = c(1, 2), type = "l")
head(data5)
tail(data5)
dim(data5)
plot(data4, )
with(data3, plot(meansteps ~ interval, ylab = "Ave no. of Steps", type = "h", lwd = "3"))
with(data3[,100:288], plot(meansteps ~ interval, ylab = "Ave no. of Steps", type = "h", lwd = "3"))
with(data3[100:288,], plot(meansteps ~ interval, ylab = "Ave no. of Steps", type = "h", lwd = "3"))
with(data3[150:288,], plot(meansteps ~ interval, ylab = "Ave no. of Steps", type = "h", lwd = "3"))
data5
xyplot(steps ~  interval | weekdays1, data = data2, layout = c(2, 1))
head(data2)
head(data5)
class(data5[,1:3])
class(data5[,1])
class(data5[1,1])
class(data5[1,3])
class(data5[1,2])
table(data5$weekdays1)
xyplot(steps ~  interval | weekdays1, data = data2, layout = c(2, 1))
xyplot(meansteps ~  interval | weekdays1, data = data5, layout = c(1, 2))
xyplot(meansteps ~  interval | weekdays1, data = data5, layout = c(1, 2), type = "l")
xyplot(meansteps ~  interval | weekdays1, data = data5, layout = c(1, 2), type = "h")
xyplot(meansteps ~  interval | weekdays1, data = data5, type = "l", layout = c(1, 2))
xyplot(meansteps ~  interval | weekdays1, data = data5, layout = c(2, 1), type = "l")
head(data2)
dim(data2)
head(data)
with(intervalmeans, plot(meansteps ~ interval, ylab = "Mean no. of Steps", xlab = "Time of Day", type = "l"))
data <- read.csv(unzip("activity.zip"),header = TRUE, na.strings="NA")
for (i in 1:length(data$interval)){
if (nchar(data$interval[i]) == 1 )
{data$interval[i] <- paste0("000", data$interval[i]) }
if (nchar(data$interval[i]) == 2)
{data$interval[i] <- paste0("00",data$interval[i]) }
if (nchar(data$interval[i]) == 3)
{data$interval[i] <- paste0("0",data$interval[i]) }
}
data <- read.csv(unzip("activity.zip"),header = TRUE, na.strings="NA")
for (i in 1:length(data$interval)){
if (nchar(data$interval[i]) == 1 )
{data$interval[i] <- paste0("000", data$interval[i]) }
if (nchar(data$interval[i]) == 2)
{data$interval[i] <- paste0("00",data$interval[i]) }
if (nchar(data$interval[i]) == 3)
{data$interval[i] <- paste0("0",data$interval[i]) }
}
daytotalsdata <- tapply(data$steps, data$date, sum)
daytotals <- as.data.frame(daytotalsdata)
daytotalsdays <- as.Date(row.names(daytotals))
daytotals <- cbind(daytotalsdays,daytotals)
colnames(daytotals) <- (c("day", "steps"))
with(daytotals, plot(steps ~ day, ylab = "Total no. of Steps", type = "h", lwd = "3"))
meansteps <- mean(daytotals$steps, na.rm = TRUE)
mediansteps <- median(daytotals$steps, na.rm = TRUE)
print(meansteps)
print (mediansteps)
intervalmeans <- as.data.frame(tapply(data$steps, data$interval, mean, na.rm = TRUE))
intervaldata <- row.names(intervalmeans)
intervalmeans <- cbind(as.factor(intervaldata),intervalmeans)
colnames(intervalmeans) <- (c("interval", "meansteps"))
with(intervalmeans, plot(meansteps ~ interval, ylab = "Mean no. of Steps", xlab = "Time of Day", type = "l"))
rowid <- which.max(intervalmeans$meansteps)
print(rowid)
missingvalues <- missingvalues <- sum(is.na(data$steps))
print(missingvalues)
print(missingvalues)
data2 <- data
for (i in 1:length(data2$steps)){
if(is.na(data2$steps[i]) == TRUE){
data2$steps[i] <- as.numeric(intervalmeans[which(data2$interval[i] == intervalmeans[,1]),2])
}
}
daytotalsdata2 <- tapply(data2$steps, data2$date, sum)
daytotals2 <- as.data.frame(daytotalsdata2)
daytotalsdays2 <- as.Date(row.names(daytotals2))
daytotals2 <- cbind(daytotalsdays2,daytotals2)
colnames(daytotals2) <- (c("day", "steps"))
with(daytotals2, plot(steps ~ day, ylab = "Total no. of Steps", type = "h", lwd = "3"))
meansteps2 <- mean(daytotals2$steps, na.rm = TRUE)
mediansteps2 <- median(daytotals2$steps, na.rm = TRUE)
print(meansteps2)
print (mediansteps2)
weekdays1 <- c()
for (i in 1:length(data2$date)){
if(weekdays(as.Date(data2$date[i])) == "Saturday"){
weekdays1 <- c(weekdays1, "weekend")}
else if(weekdays(as.Date(data2$date[i])) == "Sunday"){
weekdays1 <- c(weekdays1, "weekend")}
else{weekdays1 <- c(weekdays1, "weekday")}
}
weekdays1 <- as.factor(weekdays1)
data2 <- cbind(data2, weekdays1)
head(data2)
head(data2)
dim(data2)
data3 <- data2[data2$weekdays1 == "weekday",]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.factor(intervaldata3),intervalmeans3,c(rep("weekday", 288)))
colnames(intervalmeans3) <- (c("interval", "meansteps", "weekdays1"))
data4 <- data2[data2$weekdays1 == "weekend",]
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.factor(intervaldata4),intervalmeans4, c(rep("weekend", 288)))
colnames(intervalmeans4) <- (c("interval", "meansteps", "weekdays1"))
data5 <- rbind(intervalmeans3,intervalmeans4)
head(data5)
library(lattice)
xyplot(meansteps ~ interval | weekdays1, data = data5, layout = c(1, 2), type = "l")
class(data5[1,1])
data3 <- data2[data2$weekdays1 == "weekday",]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.nuemeric(intervaldata3),intervalmeans3,c(rep("weekday", 288)))
colnames(intervalmeans3) <- (c("interval", "meansteps", "weekdays1"))
data4 <- data2[data2$weekdays1 == "weekend",]
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.numeric(intervaldata4),intervalmeans4, c(rep("weekend", 288)))
colnames(intervalmeans4) <- (c("interval", "meansteps", "weekdays1"))
data5 <- rbind(intervalmeans3,intervalmeans4)
library(lattice)
xyplot(meansteps ~ interval | weekdays1, data = data5, layout = c(1, 2), type = "l", scales = list())
data3 <- data2[data2$weekdays1 == "weekday",]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.numeric(intervaldata3),intervalmeans3,c(rep("weekday", 288)))
colnames(intervalmeans3) <- (c("interval", "meansteps", "weekdays1"))
data4 <- data2[data2$weekdays1 == "weekend",]
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.numeric(intervaldata4),intervalmeans4, c(rep("weekend", 288)))
colnames(intervalmeans4) <- (c("interval", "meansteps", "weekdays1"))
data5 <- rbind(intervalmeans3,intervalmeans4)
library(lattice)
xyplot(meansteps ~ interval | weekdays1, data = data5, layout = c(1, 2), type = "l", scales = list())
setwd("~/Coursera/5 Reproducible Research/Wk2/RepData_PeerAssessment1")
library(lubridate)
data <- read.csv(unzip("activity.zip"),header = TRUE, na.strings="NA")
for (i in 1:length(data$interval)){
if (nchar(data$interval[i]) == 1 )
{data$interval[i] <- paste0("000", data$interval[i]) }
if (nchar(data$interval[i]) == 2)
{data$interval[i] <- paste0("00",data$interval[i]) }
if (nchar(data$interval[i]) == 3)
{data$interval[i] <- paste0("0",data$interval[i]) }
}
## transform date and interval into timedates FIRST in data using lubridate
## What is the mean total number of steps taken per day
daytotalsdata <- tapply(data$steps, data$date, sum)
daytotals <- as.data.frame(daytotalsdata)
daytotalsdays <- as.Date(row.names(daytotals))
daytotals <- cbind(daytotalsdays,daytotals)
colnames(daytotals) <- (c("day", "steps"))
with(daytotals, plot(steps ~ day, ylab = "Total no. of Steps", type = "h", lwd = "3"))
meansteps <- mean(daytotals$steps, na.rm = TRUE)
mediansteps <- median(daytotals$steps, na.rm = TRUE)
print(meansteps)
print (mediansteps)
## library(ggplot2)
## qplot(day, steps, data = daytotals)
## Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and
## the average number of steps taken, averaged across all days (y-axis)
intervalmeans <- as.data.frame(tapply(data$steps, data$interval, mean, na.rm = TRUE))
intervaldata <- row.names(intervalmeans)
intervalmeans <- cbind(as.factor(intervaldata),intervalmeans)
colnames(intervalmeans) <- (c("interval", "meansteps"))
## NB can modify below by converting all intervals into posit format just using today's date!!
## add interval cleaning function here !!!
with(intervalmeans, plot(meansteps ~ interval, ylab = "Mean no. of Steps", xlab = "Time of Day", type = "l"))
rowid <- which.max(intervalmeans$meansteps)
print(rowid)
## Calculate and report the total number of missing values in the dataset
missingvalues <- missingvalues <- sum(is.na(data$steps))
print(missingvalues)
print(missingvalues)
## Devise a strategy for filling in all of the missing values in the dataset.
## The strategy does not need to be sophisticated. For example, you could use
## the mean/median for that day, or the mean for that 5-minute interval, etc.
## make an index for the imputed steps similar to intervalmeans above
## Create a new dataset that is equal to the original dataset but with
## the missing data filled in.
data2 <- data
for (i in 1:length(data2$steps)){
if(is.na(data2$steps[i]) == TRUE){
data2$steps[i] <- as.numeric(intervalmeans[which(data2$interval[i] == intervalmeans[,1]),2])
}
}
## Make a histogram of the total number of steps taken each day and
## Calculate and report the mean and median total number of steps taken per day.
## Do these values differ from the estimates from the first part of the assignment?
## What is the impact of imputing missing data on the estimates of the total
## daily number of steps?
daytotalsdata2 <- tapply(data2$steps, data2$date, sum)
daytotals2 <- as.data.frame(daytotalsdata2)
daytotalsdays2 <- as.Date(row.names(daytotals2))
daytotals2 <- cbind(daytotalsdays2,daytotals2)
colnames(daytotals2) <- (c("day", "steps"))
with(daytotals2, plot(steps ~ day, ylab = "Total no. of Steps", type = "h", lwd = "3"))
meansteps2 <- mean(daytotals2$steps, na.rm = TRUE)
mediansteps2 <- median(daytotals2$steps, na.rm = TRUE)
print(meansteps2)
print (mediansteps2)
## Create a new factor variable in the dataset with two levels – “weekday” and
## “weekend” indicating whether a given date is a weekday or weekend day.
weekdays1 <- c()
for (i in 1:length(data2$date)){
if(weekdays(as.Date(data2$date[i])) == "Saturday"){
weekdays1 <- c(weekdays1, "weekend")}
else if(weekdays(as.Date(data2$date[i])) == "Sunday"){
weekdays1 <- c(weekdays1, "weekend")}
else{weekdays1 <- c(weekdays1, "weekday")}
}
weekdays1 <- as.factor(weekdays1)
data2 <- cbind(data2, weekdays1)
## Make a panel plot containing a time series plot (i.e. type = "l")
## of the 5-minute interval (x-axis) and the average number of steps taken,
## averaged across all weekday days or weekend days (y-axis).
## See the README file in the GitHub repository to see an example of what this
## plot should look like using simulated data.
data3 <- data2[data2$weekdays1 == "weekday",]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.numeric(intervaldata3),intervalmeans3,c(rep("weekday", 288)))
colnames(intervalmeans3) <- (c("interval", "meansteps", "weekdays1"))
data4 <- data2[data2$weekdays1 == "weekend",]
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.numeric(intervaldata4),intervalmeans4, c(rep("weekend", 288)))
colnames(intervalmeans4) <- (c("interval", "meansteps", "weekdays1"))
data5 <- rbind(intervalmeans3,intervalmeans4)
library(lattice)
xyplot(meansteps ~ interval | weekdays1, data = data5, layout = c(1, 2), type = "l", scales = list())
intervalmeans <- as.data.frame(tapply(data$steps, data$interval, mean, na.rm = TRUE))
intervaldata <- row.names(intervalmeans)
intervalmeans <- cbind(as.numeric(intervaldata),intervalmeans)
colnames(intervalmeans) <- (c("interval", "meansteps"))
## add interval cleaning function here !!!
with(intervalmeans, plot(meansteps ~ interval, ylab = "Mean no. of Steps", xlab = "Time of Day", type = "l"))
intervalmeans <- as.data.frame(tapply(data$steps, data$interval, mean, na.rm = TRUE))
intervaldata <- row.names(intervalmeans)
intervalmeans <- cbind(as.numeric(intervaldata),intervalmeans)
colnames(intervalmeans) <- (c("interval", "meansteps"))
## NB can modify below by converting all intervals into posit format just using today's date!!
## add interval cleaning function here !!!
with(intervalmeans, plot(meansteps ~ interval, ylab = "Mean no. of Steps", xlab = "Time of Day", type = "l"))
setwd("~/Coursera/5 Reproducible Research/Wk2/RepData_PeerAssessment1")
if (file.exists("activity.zip") == FALSE){
fileurl <- "https://www.coursera.org/learn/reproducible-research/peer/gYyPt/course-project-1"
download.file(fileurl, destfile = "./activity.zip")
}
data <- read.csv(unzip("activity.zip"),header = TRUE, na.strings="NA")
for (i in 1:length(data$interval)){
if (nchar(data$interval[i]) == 1 )
{data$interval[i] <- paste0("000", data$interval[i]) }
if (nchar(data$interval[i]) == 2)
{data$interval[i] <- paste0("00",data$interval[i]) }
if (nchar(data$interval[i]) == 3)
{data$interval[i] <- paste0("0",data$interval[i]) }
}
daytotalsdata <- tapply(data$steps, data$date, sum)
daytotals <- as.data.frame(daytotalsdata)
daytotalsdays <- as.Date(row.names(daytotals))
daytotals <- cbind(daytotalsdays,daytotals)
colnames(daytotals) <- (c("day", "steps"))
with(daytotals, plot(steps ~ day, ylab = "Total no. of Steps", type = "h", lwd = "3"))
meansteps <- mean(daytotals$steps, na.rm = TRUE)
mediansteps <- median(daytotals$steps, na.rm = TRUE)
print(meansteps)
print (mediansteps)
intervalmeans <- as.data.frame(tapply(data$steps, data$interval, mean, na.rm = TRUE))
intervaldata <- row.names(intervalmeans)
intervalmeans <- cbind(as.numeric(intervaldata),intervalmeans)
colnames(intervalmeans) <- (c("interval", "meansteps"))
with(intervalmeans, plot(meansteps ~ interval, ylab = "Mean no. of Steps", xlab = "Time of Day", type = "l"))
rowid <- which.max(intervalmeans$meansteps)
print(rowid)
missingvalues <- missingvalues <- sum(is.na(data$steps))
print(missingvalues)
print(missingvalues)
data2 <- data
for (i in 1:length(data2$steps)){
if(is.na(data2$steps[i]) == TRUE){
data2$steps[i] <- as.numeric(intervalmeans[which(data2$interval[i] == intervalmeans[,1]),2])
}
}
daytotalsdata2 <- tapply(data2$steps, data2$date, sum)
daytotals2 <- as.data.frame(daytotalsdata2)
daytotalsdays2 <- as.Date(row.names(daytotals2))
daytotals2 <- cbind(daytotalsdays2,daytotals2)
colnames(daytotals2) <- (c("day", "steps"))
with(daytotals2, plot(steps ~ day, ylab = "Total no. of Steps", type = "h", lwd = "3"))
meansteps2 <- mean(daytotals2$steps, na.rm = TRUE)
mediansteps2 <- median(daytotals2$steps, na.rm = TRUE)
print(meansteps2)
print (mediansteps2)
head(data2)
for (i in 1:length(data2$steps)){
if(is.na(data2$steps[i]) == TRUE){
data2$steps[i] <- as.numeric(intervalmeans[which(data2$interval[i] == intervalmeans[,1]),2])
}
}
head(intervalmeans)
data2$interval[i]
as.numeric(data2$interval[i])
as.numeric(data2$interval[2])
as.numeric(data2$interval[3])
data2$interval[3]
for (i in 1:length(data2$steps)){
if(is.na(data2$steps[i]) == TRUE){
data2$steps[i] <- as.numeric(intervalmeans[which(as.numeric(data2$interval[i]) == intervalmeans[,1]),2])
}
}
head(data2)
daytotalsdata2 <- tapply(data2$steps, data2$date, sum)
daytotals2 <- as.data.frame(daytotalsdata2)
daytotalsdays2 <- as.Date(row.names(daytotals2))
daytotals2 <- cbind(daytotalsdays2,daytotals2)
colnames(daytotals2) <- (c("day", "steps"))
with(daytotals2, plot(steps ~ day, ylab = "Total no. of Steps", type = "h", lwd = "3"))
meansteps2 <- mean(daytotals2$steps, na.rm = TRUE)
mediansteps2 <- median(daytotals2$steps, na.rm = TRUE)
print(meansteps2)
print (mediansteps2)
for (i in 1:length(data2$steps)){
if(is.na(data2$steps[i]) == TRUE){
data2$steps[i] <- as.numeric(intervalmeans[which(as.numeric(data2$interval[i]) == intervalmeans[,1]),2])
}
}
daytotalsdata2 <- tapply(data2$steps, data2$date, sum)
daytotals2 <- as.data.frame(daytotalsdata2)
daytotalsdays2 <- as.Date(row.names(daytotals2))
daytotals2 <- cbind(daytotalsdays2,daytotals2)
colnames(daytotals2) <- (c("day", "steps"))
with(daytotals2, plot(steps ~ day, ylab = "Total no. of Steps", type = "h", lwd = "3"))
meansteps2 <- mean(daytotals2$steps, na.rm = TRUE)
weekdays1 <- c()
for (i in 1:length(data2$date)){
if(weekdays(as.Date(data2$date[i])) == "Saturday"){
weekdays1 <- c(weekdays1, "weekend")}
else if(weekdays(as.Date(data2$date[i])) == "Sunday"){
weekdays1 <- c(weekdays1, "weekend")}
else{weekdays1 <- c(weekdays1, "weekday")}
}
weekdays1 <- as.factor(weekdays1)
data2 <- cbind(data2, weekdays1)
data3 <- data2[data2$weekdays1 == "weekday",]
intervalmeans3 <- as.data.frame(tapply(data3$steps, data3$interval, mean, na.rm = TRUE))
intervaldata3 <- row.names(intervalmeans3)
intervalmeans3 <- cbind(as.numeric(intervaldata3),intervalmeans3,c(rep("weekday", 288)))
colnames(intervalmeans3) <- (c("interval", "meansteps", "weekdays1"))
data4 <- data2[data2$weekdays1 == "weekend",]
intervalmeans4 <- as.data.frame(tapply(data4$steps, data4$interval, mean, na.rm = TRUE))
intervaldata4 <- row.names(intervalmeans4)
intervalmeans4 <- cbind(as.numeric(intervaldata4),intervalmeans4, c(rep("weekend", 288)))
colnames(intervalmeans4) <- (c("interval", "meansteps", "weekdays1"))
data5 <- rbind(intervalmeans3,intervalmeans4)
library(lattice)
xyplot(meansteps ~ interval | weekdays1, data = data5, layout = c(1, 2), type = "l", scales = list())
print(rowid)
print names(rowid)
print(names(rowid))
maxinterval <- names(which.max(intervalmeans$meansteps))
print(maxinterval)
hist(steps,10, main = "Total number of steps taken per day", xlab = "")
hist(daytotals,10, main = "Total number of steps taken per day", xlab = "")
hist(daytotals$steps,10, main = "Total number of steps taken per day", xlab = "")
hist(daytotals$steps,5, main = "Total number of steps taken per day", xlab = "")
hist(daytotals$steps,15, main = "Total number of steps taken per day", xlab = "")
hist(daytotals$steps,20, main = "Total number of steps taken per day", xlab = "")
hist(daytotals$steps,10, main = "Total number of steps taken per day", xlab = "")
hist(daytotals$steps,breaks=10, main = "Total no. of Steps per day")
par(mfrow=c(1,2))
hist(daytotals$steps,breaks=10, main = "Total no. of Steps per Day", xlab = "Steps")
hist(daytotals2$steps,breaks=10, main = "Total no. of Steps per Day", xlab = "Steps")
par(mfrow=c(1,2))
hist(daytotals$steps,breaks=10, main = "Total no. of Steps per Day", xlab = "Steps", ylim=25)
hist(daytotals2$steps,breaks=10, main = "Total no. of Steps per Day (with imptued values)", xlab = "Steps"ylim=25)
par(mfrow=c(1,2))
hist(daytotals$steps,breaks=10, main = "Total no. of Steps per Day", xlab = "Steps", ylim=25)
hist(daytotals2$steps,breaks=10, main = "Total no. of Steps per Day (with imptued values)", xlab = "Steps",ylim=25)
par(mfrow=c(1,2))
hist(daytotals$steps,breaks=10, main = "Total no. of Steps per Day", xlab = "Steps", ylim=c(0,25))
hist(daytotals2$steps,breaks=10, main = "Total no. of Steps per Day (with imptued values)", xlab = "Steps",ylim=c(0,25))
round(meansteps)
round(meansteps,1)
round(meansteps,2)
round(mediansteps)
as.integer(median(daytotals$steps, na.rm = TRUE))
as.integer(mean(daytotals$steps, na.rm = TRUE))
